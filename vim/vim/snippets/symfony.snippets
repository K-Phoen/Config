snippet requ
	$this->getRequestParameter("${1}");${2}
snippet fw
	$this->forward("${1}", "${2}");${3}
snippet fw404
	$this->forward404${1}(${2}, "${3}");
snippet red
	$this->redirect("${1}");${2}
snippet verror 
	return sfView::ERROR${2};
snippet serror 
	$this->getRequest()->setError("${1}, "${2}");$3}

snippet newc 
	$c = new Criteria();${1}
snippet add 
	$c->add("${1}", "${2}");${2}
snippet desc 
	$c->addDescendingOrderByColumn("${1}");${2}
snippet asc 
	$c->addAscendingOrderByColumn("${1}");${2}
snippet lim 
	$c->setLimit("${1}");${2}
snippet dos 
	${1:self}::doSelect($c);${2}
snippet doo 
	${1:self}::doSelectOne($c);${2}
snippet doc 
	${1:self}::doCount($c);${2}

snippet ceq 
	Criteria::EQUAL${1}
snippet cne 
	Criteria::NOT_EQUAL${1}
snippet cgt 
	Criteria::GREATER_THAN${1}
snippet clt 
	Criteria::LESS_THAN${1}
snippet cge 
	Criteria::GREATER_EQUAL${1}
snippet cle 
	Criteria::LESS_EQUAL${1}
snippet cli 
	Criteria::LIKE${1}
snippet cnl 
	Criteria::NOT_LIKE${1}
snippet cin 
	Criteria::IN${1}
snippet ccu 
	Criteria::CUSTOM${1}
snippet actions
	<?php
	/**
	 * This file declare the $1 actions.
	 *
	 * @package ${2:package}
	 * @subpackage ${3:Actions}
	 * @author `g:snips_author`
	 * @copyright (c) `g:snips_company` `strftime("%Y")`
	 * @since `strftime("%Y-%m-%d")`
	 */
	
	/**
	 * ${4:actions with no description}
	 */
	class ${1:module}Actions extends sfActions
	{
		/**
		 * the execute$5 function
		 *
		 * @param sfWebRequest $request the user request
		 */
		public function execute${5:Index}(sfWebRequest $request) 
		{
			${6}
		}
	} // end of $1Actions
snippet action 
	<?php
	/**
	 * This file declare the $1 action.
	 *
	 * @package ${2:package}
	 * @subpackage ${3:Actions}
	 * @author `g:snips_author`
	 * @copyright (c) `g:snips_company` `strftime("%Y")`
	 * @since `strftime("%Y-%m-%d")`
	 */
	
	/**
	 * ${4:action with no description}
	 */
	class ${1:`Snippet_PHPClassNameFromFilename()`} extends sfAction
	{
		/**
		 * the execute function
		 *
		 * @param sfWebRequest $request the user request
		 */
		public function execute(sfWebRequest $request) 
		{
			${5}
		}
	} // end of $1Action
snippet component
	<?php
	/**
	 * This file declare the $1 component.
	 *
	 * @package ${2:package}
	 * @subpackage ${3:Actions}
	 * @author `g:snips_author`
	 * @copyright (c) `g:snips_company` `strftime("%Y")`
	 * @since `strftime("%Y-%m-%d")`
	 */
	
	/**
	 * ${4:component with no description}
	 */
	class ${1:`Snippet_PHPClassNameFromFilename()`} extends sfComponent
	{
		/**
		 * the execute function
		 *
		 * @param sfWebRequest $request the user request
		 */
		public function execute(sfWebRequest $request) 
		{
			${5}
		}
	} // end of $1Component
snippet components
	<?php
	/**
	 * This file declare the $1 components.
	 *
	 * @package ${2:package}
	 * @subpackage ${3:Actions}
	 * @author `g:snips_author`
	 * @copyright (c) `g:snips_company` `strftime("%Y")`
	 * @since `strftime("%Y-%m-%d")`
	 */
	
	/**
	 * ${4:components with no description}
	 */
	class ${1:module}Components extends sfComponents
	{
		/**
		 * the execute$5 function
		 *
		 * @param sfWebRequest $request the user request
		 */
		public function execute${5:Index}(sfWebRequest $request) 
		{
			${6}
		}
	} // end of $1Components
snippet execute
	/**
	 * ${2:entry point for $1 action}
	 *
	 * @param sfWebRequest $request the user request
	 * @return 
	 */
	public function execute${1:Index}(sfWebRequest $request)
	{
		${3}
	}${4}
snippet getFlash
	$this->getUser()->getFlash(${1:nameFlash});
snippet setFlash
	$this->getUser()->setFlash(${1:nameFlash},${2:value},${3:true});
snippet hasFlash
	$this->getUser()->hasFlash(${1:nameFlash});
snippet	getAttribute
	$this->getUser()->getAttribute(${1:nameAttribute});
snippet	setAttribute
	$this->getUser()->setAttribute(${1:nameAttribute}, ${2:value});
snippet log
	sfContext::getInstance()->getLogger()->${1:info}('${2:msg}');
# set the autoload for template helpers into the file
snippet set_template
	<?php 
	// vim:ft=php.html.sftemplate
	?>
snippet set_test
	<?php
	// vim: ft=symfony.php.sftest

# vim:ft=snippet
